package ru.astondevs.gerasimov.FirstLecture.arrayList;

/**
 * Данный обобщенный интерфейс описывает работу абстрактной структуры данных динамически расширяемого массива.
 */
public interface MyArrayList<T> {

    /**
     * Реализация данного метода должна возвращать текущий размер динамически изменяемого массива.
     */
    int size();

    /**
     * Реализация данного метода должна возвращать текущий размер той структуры данных, на основе которой
     * осуществляется реализация динамически изменяемого массива.
     */
    int currentCapacity();

    /**
     * Возвращает true, если динамический массив содержит хотя бы один элемент.
     * Возвращает false, если массив не содержит ни одного элемента.
     */
    boolean isEmpty();

    /**
     * Добавляет элемент в динамически расширяемый массив, возвращает true, если добавление прошло успешно.
     */
    boolean add(T elem);

    /**
     * Добавляет элемент по указанному индексу.
     * Если указанный индекс находится за пределами массива, выкидывает IndexOutOfBoundsException.
     */
    void add(int idx, T elem);

    /**
     * Удаляет элемент по указанному индексу.
     * Если указанный индекс находится за пределами массива, выкидывает IndexOutOfBoundsException.
     * Возвращает удаленный элемент.
     */
    T remove(int idx);

    /**
     * Удаляет указанный элемент из коллекции.
     * Если элемента в коллекции нет возвращает null.
     * Если элемент успешно найден и удален возвращает удаленный элемент.
     */
    T remove(T elem);

    /**
     * Ищет указанный элемент в коллекции.
     * Возвращает -1, если элемент не найден или индекс, по которому хранится искомый элемент.
     */
    int find(T elem);

    /**
     * Возвращает элемент, хранящий по заданному индексу.
     * Если заданный индекс находится за пределами массива, выкидывает IndexOutOfBoundsException.
     */
    T get(int idx);

    /**
     * Устанавливает новое значение по указанному индексу.
     * Если заданный индекс находится за пределами массива, выкидывает IndexOutOfBoundsException.
     */
    T set(int index, T element);

}
